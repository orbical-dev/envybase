name: Build and Publish Multi-Service Docker Images

on:
  release:
    types: [published]
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  BASE_IMAGE_NAME: orbical-dev/envybase

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        service:
          - name: core
            context: apps/core
            dockerfile: apps/core/Dockerfile
          - name: auth
            context: apps/auth
            dockerfile: apps/auth/Dockerfile
          - name: database
            context: apps/database
            dockerfile: apps/database/Dockerfile
          - name: func
            context: apps/function
            dockerfile: apps/function/Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_TOKEN }}

      - name: Extract metadata for ${{ matrix.service.name }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}-${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=stable,enable=${{ github.event_name == 'release' }}

      - name: Build and push ${{ matrix.service.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.service.name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service.name }}
          platforms: linux/amd64,linux/arm64

  # Optional: Create a summary of built images
  summary:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: always()
    permissions:
      contents: read
    steps:
      - name: Build Summary
        run: |
          echo "## 🐳 Docker Images Built" >> $GITHUB_STEP_SUMMARY
          echo "| Service | Status | Image |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Core | ✅ | ghcr.io/orbical-dev/envybase-core |" >> $GITHUB_STEP_SUMMARY
          echo "| Auth | ✅ | ghcr.io/orbical-dev/envybase-auth |" >> $GITHUB_STEP_SUMMARY
          echo "| Database | ✅ | ghcr.io/orbical-dev/envybase-database |" >> $GITHUB_STEP_SUMMARY
          echo "| Function | ✅ | ghcr.io/orbical-dev/envybase-func |" >> $GITHUB_STEP_SUMMARY